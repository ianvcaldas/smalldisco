# smalldisco: siRNA region inference and tail quantification
# ==========================================================

# To configure your analysis, please read through this file and specify
# the values for your input files and parameters.
# If a parameter is irrelevant for your analysis, leave a placeholder value in
# instead of deleting it, which can cause Snakemake to complain.


# Please specify this parameter:
# What folder should we write intermediate files to?
# By default, we only keep logs and small output files in this directory, no large data files.
# If they're not needed, the directory can be safely removed after the program runs.
intermediate_dir: "smalldisco-intermediate-output"


# Run everything
# --------------
#
# To align samples, find siRNA regions, then quantify tails of reads mapping
# antisense to siRNA, specify every parameter in this config file, then run:
# python smalldisco.py run_all --configfile config.yaml


# Alignment of samples to reference genome
# ----------------------------------------
#
# To just align samples to a reference genome using HISAT2, specify the below
# parameters, then run:
# python smalldisco.py align --configfile config.yaml

# Which folder are the raw sample FASTQ files in? Make sure they all end in the
# extension .fastq and are uncompresed.
fastq_dir: "example-data/fastq"

# Where is the reference genome in FASTA format?
genome: "example-data/c_elegans-chrom2.fa"

# What commmands execute HISAT2 in this computer?
# What command runs hisat2-build?
hisat2_build_command: "hisat2-build"
# What command runs hisat2?
hisat2_command: "hisat2"

# What folder should the resulting aligned BAM files be written to?
bam_dir: "example-data/bam"


# Localization of putative siRNA regions
# --------------------------------------
#
# To convert a series of BAM alignments into a list of putative siRNA regions,
# specify the parameters below, then run:
# python smalldisco.py sirna --configfile config.yaml

# What folder are the BAM alignments in?
# Please specify the `bam_dir` parameter, above.

# Where is the GTF/GFF file of genome annotations?
annotation: "data/annotations.gtf"
# What kind of annotation is it? There are two options: 'GFF' or 'GTF'.
annotation_kind: "GTF"

# What category of feature in the annotation file will house putative siRNAs?
# By default, we assume siRNAs come from the CDS (coding sequences) in the genome.
sirna_source: "CDS"

# How many reads should map antisense to a region, at least, before we consider
# it a putative siRNA?
min_reads_per_sirna: 10
# What is the minimum acceptable size of a siRNA region?
min_sirna_size: 10

# Where should the list of putative siRNA regions be output to?
sirna_output: "data/results/sirna-regions.bed"


# Quantification of tails
# -----------------------
#
# To quantify read tails across a list of small RNA loci, specify the
# parameters below, then run:
# python smalldisco.py tail --configfile config.yaml

# Where are the reference genome in FASTA format and the raw FASTQ sample reads?
# Please specify the `fastq_dir` and `genome` paremeters, above.

# Where is the BED file of small RNA loci that we will count read tails for?
# This can be the same as the `sirna_output` parameter above if you're
# quantifying tails in the newly inferred siRNA regions.
small_rna_reference: "data/results/sirna-regions.bed"

# Should we quantify tails only for reads that map antisense to the reference
# loci? This should probably be true if the reference loci are siRNA regions,
# false otherwise.
tails_antisense_only: true

# What commmand runs Tailor in this computer?
tailor_command: "/programs/Tailor/bin/tailor_v1.1_linux_static"
# What is the minimum number of base pairs in a read that must align to the
# genome before a tail? Tailor calls this the "seed" parameter, and its
# default value is 18. This is the same as running Tailor with the command
# line argument -l.
tailor_min_prefix_match: 18

# Where should the table of tails per locus be output to?
tails_output: "data/results/tails.tsv"
